{"version":3,"sources":["firebase.js","components/linkForm.js","components/links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","LinkForm","props","initialSetValues","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","currentId","className","onSubmit","preventDefault","addOrEditLink","onChange","type","placeholder","rows","Links","links","setLinks","setCurrentId","linkObject","set","toast","update","getLinks","onSnapshot","querySnapshot","docs","forEach","push","onDeleteLink","window","confirm","delete","map","link","onClick","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6966fbc.chunk.js","sourcesContent":[" import firebase from 'firebase/app'\r\n import 'firebase/firestore';\r\n // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyChn9WCbz8kxOedlRtBXheYm98UZpSfOeM\",\r\n    authDomain: \"react-a77be.firebaseapp.com\",\r\n    projectId: \"react-a77be\",\r\n    storageBucket: \"react-a77be.appspot.com\",\r\n    messagingSenderId: \"854546999325\",\r\n    appId: \"1:854546999325:web:81dea9e2897697f7ad3ef4\",\r\n    measurementId: \"G-HDGHFFXN6Z\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb=firebase.initializeApp(firebaseConfig);\r\n  export const db=fb.firestore();\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {db} from '../firebase'\r\n// cuando el componente cambia\r\nconst LinkForm=(props)=>{\r\n    const initialSetValues={\r\n        url:'',\r\n        name:'',\r\n        description:'',\r\n    };\r\n    const [values,setValues]=useState(initialSetValues)\r\n    const handleInputChange = e=>{\r\n        const{name,value}=e.target;\r\n        setValues({...values,[name]:value})\r\n    }\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        props.addOrEditLink(values);\r\n        setValues({...initialSetValues})\r\n    }\r\n    const getLinkById = async (id) =>{\r\n        const doc= await db.collection('links').doc(id).get();\r\n        setValues({...doc.data()});\r\n    }\r\n    useEffect(()=>{\r\n        if(props.currentId === ''){\r\n            setValues({...initialSetValues});\r\n        }else{\r\n            getLinkById(props.currentId);\r\n        }\r\n    },[props.currentId]);\r\n    return (\r\n        <form className='card card-body border-primary'onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input \r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"https://someurl.com\"\r\n                name=\"url\"\r\n                value={values.url}\r\n                />\r\n            </div>\r\n            <div className=\"form-group input-group\" >\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"website\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                onChange={handleInputChange}\r\n                name=\"description\"\r\n                placeholder=\"Descripción\"\r\n                rows=\"3\" \r\n                className=\"form-control\"\r\n                value={values.description}\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary btn-block\">\r\n                {props.currentId === \"\" ? \"Save\" : \"Update\"}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nexport default LinkForm","import React,{useEffect,useState} from 'react'\r\n// useState para pintarlos se debe guardar en el estado\r\n// combinacion para que cuando carga el componente haga petición a firebase.\r\nimport LinkForm from './linkForm'\r\nimport { toast } from 'react-toastify';\r\nimport {db} from '../firebase'\r\nconst Links =()=>{\r\n    const [links,setLinks]=useState([]);\r\n    const [currentId,setCurrentId]=useState('');\r\n    const addOrEditLink = async (linkObject) =>{\r\n        if(currentId === ''){\r\n            await  db.collection('links').doc().set(linkObject);\r\n            toast(\"Comment added\",{type:'success'});\r\n        }else{\r\n           await db.collection('links').doc(currentId).update(linkObject);\r\n           toast('Link updated successfully',{type:'info'});\r\n           setCurrentId('');\r\n        }\r\n    }\r\n    // usamos onSnapShot porque queremos hacer traer data en tiempo real\r\n    const getLinks= async ()=>{\r\n        db.collection('links').onSnapshot(\r\n          \r\n            (querySnapshot) => {\r\n                const docs=[];\r\n                querySnapshot.forEach((doc)=>{\r\n                    docs.push({...doc.data(),id:doc.id})\r\n\r\n                })\r\n                setLinks(docs);\r\n            }\r\n        );\r\n        \r\n    }\r\n    const onDeleteLink=async (id)=>{\r\n        if(window.confirm('are you sure to want to delete this link?')){\r\n           await db.collection('links').doc(id).delete();\r\n        }\r\n        toast(\"link removed\",{type:'error'});\r\n    }\r\n    useEffect(()=>{\r\n        getLinks();\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-sm-4 mt-2\">\r\n            <LinkForm {...{addOrEditLink,currentId,links}}/>\r\n            </div>\r\n            <div className=\"col-sm-6 mt-2\">\r\n                {links.map((link)=>(\r\n                    <div className=\"card mb-1 col-10\" key={link.id}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                            <h4>{link.name}</h4>\r\n                            <i className=\"material-icons text-danger\" onClick={()=>onDeleteLink(link.id)}>close</i>\r\n                            <i className=\"material-icons\" onClick={()=>setCurrentId(link.id)}>create</i>\r\n                            </div>\r\n\r\n                            <p>{link.description}</p>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                Go To Website\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Links","import React from 'react';\r\nimport './App.css';\r\nimport 'bootswatch/dist/pulse/bootstrap.min.css';\r\nimport Links from './components/links'\r\nimport { ToastContainer} from 'react-toastify';\r\n// componente que ayuda a mostrar \r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container p-4\">\r\n      <h1 className=\"font-italic text-center\">Saving Notes</h1>\r\n      <div className=\"row justify-content-around \">\r\n        <Links/>\r\n      </div>\r\n      <ToastContainer/>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}